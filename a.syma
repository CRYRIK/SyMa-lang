

// animation_circle.syma by GEMINI 2.5
// Псевдографическая (ASCII) анимация круга

// --- Параметры ---
40 "centerX" store // Центр X (подберите под ваш терминал)
12 "centerY" store // Центр Y
1  "minRadius" store // Минимальный радиус
10 "maxRadius" store // Максимальный радиус
// Задержка не реализована в SyMa, анимация будет быстрой!
// 0.1 "delay" store // Концепт

"*" "circleChar" store // Символ для круга
" " "bgChar" store     // Символ фона

// --- Основной цикл анимации ---
minRadius "radius" store
1 "direction" store // 1 = растет, -1 = уменьшается

// Получаем примерные размеры терминала (сложно сделать точно без доп. средств)
// Пусть будет 80x24 - стандартные размеры
80 "termWidth" store
24 "termHeight" store

{ True } // Бесконечный цикл (прерывание через Ctrl+C)
{
    cls // Очищаем экран (□ или cls)

    // Рисуем "круг"
    0 "y" store
    { y termHeight < } // Идем по строкам
    {
        0 "x" store
        { x termWidth < } // Идем по столбцам
        {
            // Вычисляем квадрат расстояния до центра
            // Учитываем возможное растяжение символов по горизонтали (множим dx на 2)
            x centerX sub dup mul 2 mul // 2*(x-cx)^2 - примерная компенсация соотношения сторон символа
            y centerY sub dup mul       // (y-cy)^2
            +                           // 2*(x-cx)^2 + (y-cy)^2
            "distSqApprox" store

            // Квадрат текущего радиуса (тоже с компенсацией)
            radius dup mul "radiusSq" store
            // radiusSq 2 mul "radiusSqApprox" store // Можно радиус не менять, а расстояние

            // Перемещаем курсор в позицию (x, y)
            y x gotoxy // ВНИМАНИЕ: Порядок Y X для gotoxy! (⚑)

            // Проверяем, внутри ли круга
            distSqApprox radiusSq le
            { circleChar } { bgChar } ?
            prints // Печатаем символ без новой строки

            x 1 + "x" store
        } λ // Конец цикла x
        y 1 + "y" store
    } λ // Конец цикла y

    // Обновляем радиус и направление
    radius direction + "radius" store

    // Меняем направление на краях
    radius maxRadius ge { // Если достигли максимума
        -1 "direction" store
    } if
    radius minRadius le { // Если достигли минимума
        1 "direction" store
    } if

    // Здесь должна быть задержка, но в SyMa ее нет.
    // Анимация будет ограничена скоростью отрисовки.

} λ // Конец основного цикла
